package play

resource_name = input.type

policy_violations[violations] {
	violations := {
		"failed": has_members,
		"error_description": "Ensure GCP Dataproc Clusters do not have public IPs",
		"error_key": "do_not_add_public_ips",
		"resource_name": resource_name,
		"severity": "LOW",
	}
}
policy_violations[violations] {
	violations := {
		"failed": has_internal_ip,
		"error_description": "Ensure GCP Dataproc cluster is not anonymously or publicly accessible",
		"error_key": "add_private_ips",
		"resource_name": resource_name,
		"severity": "LOW",
	}
}

input_members {
	input.values.members[_] = null
}
{
	input.values.members[_] = ""
}
{
	input.values.members[_] = "allUsers"
}
{
	input.values.members[_] = "allAuthenticatedUsers"
}
 input_internal_ip{
 input.values.gce_cluster_config[_].internal_ip_only=false
 }
 {
count(input.values.gce_cluster_config)<1
 }

has_members {
	input_members == true
} else = false 

has_internal_ip {
	input_internal_ip == true
} else = false 
