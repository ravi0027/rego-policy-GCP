package play

resource_name = input.type

policy_violations[violations] {
	violations := {
		"failed": has_disk_encryption_key,
		"error_description": "Ensure Disk Encryption should not  be null or empty",
		"error_key": "add_disk_encryption",
		"resource_name": resource_name,
		"severity": "LOW",
	}
}


policy_violations[violations] {
	violations := {
		"failed": has_enable_oslogin,
		"error_description": "Ensure to enable the OSLogin in instance",
		"error_key": "add_oslogin",
		"resource_name": resource_name,
		"severity": "LOW",
	}
}



policy_violations[violations] {
	violations := {
		"failed": has_boot_disk,
		"error_description": "Ensure Boot disk should be enabled",
		"error_key": "add_boot_disk",
		"resource_name": resource_name,
		"severity": "LOW",
	}
}


policy_violations[violations] {
	violations := {
		"failed": has_ssh_keys,
		"error_description": "Ensure VM instances have block project-wide SSH keys feature disabled",
		"error_key": "disable_ssh_key",
		"resource_name": resource_name,
		"severity": "LOW",
	}
}


policy_violations[violations] {
	violations := {
		"failed": has_serial_port,
		"error_description": "Ensure VM instances should not have serial port",
		"error_key": "do_not_add_serial_port",
		"resource_name": resource_name,
		"severity": "LOW",
	}
}


policy_violations[violations] {
	violations := {
		"failed": has_can_ip_forward,
		"error_description": "Ensure to IP forwarding on instances should be disable ",
		"error_key": "do_not_add_ip_forward",
		"resource_name": resource_name,
		"severity": "LOW",
	}
}



input_disk_encryption_key {
 input.values.disk_encryption_key[_].kms_key_self_link =null
 }
 {
 input.values.disk_encryption_key[_].kms_key_self_link =""
 }
 {
 input.values.disk_encryption_key[_].raw_key =null
 }
 {
  input.values.disk_encryption_key[_].raw_key =""
 }
 {
count(input.values.disk_encryption_key)<1
 }
 
 input_boot_disk {
not input.values.boot_disk
}
{
input.values.boot_disk[_].auto_delete==false
}
{
count(input.values.boot_disk)<1
 }
 
  input_enable_oslogin {
input.values.metadata.enable_oslogin == false
}

  input_ssh_keys {
input.values.metadata.block_project_ssh_keys == false
}

  input_serial_port {
input.values.metadata.serial_port_enable == true
}


  input_can_ip_forward {
input.values.can_ip_forward == true
}

 
 
has_disk_encryption_key {
	input_disk_encryption_key == true
} else = false 


has_boot_disk  {
	input_boot_disk  == true
} else = false 



has_enable_oslogin {
	input_enable_oslogin == true
} else = false 


has_serial_port {
	input_serial_port == true
} else = false 



has_ssh_keys{
	input_ssh_keys == true
} else = false 



has_can_ip_forward {
	input_can_ip_forward == true
} else = false 


 
